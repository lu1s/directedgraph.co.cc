var g=new DirectedGraph();var graphs=new Array();var description=$("#canvas").html();$("#canvas").css({height:(window.innerHeight-$("#form").height()-45)+"px",width:(window.innerWidth-38)+"px"});var canvasWidth=parseInt($("#canvas").css("width").slice(0,$("#canvas").css("width").length-2));var canvasHeight=parseInt($("#canvas").css("height").slice(0,$("#canvas").css("height").length-2));var edgeFlag={from:null,to:null,fromMenu:null};$("#form > input:eq(1)").focusin(function(){$(this).val()=="Node"?$(this).val("").css({"color":"black"}):null}).focusout(function(){$(this).val()==""?$(this).val("Node").css({"color":"#999"}):null});$("#form > input:eq(0)").focusin(function(){$(this).val()=="Untitled graph"?$(this).val("").css({"color":"black"}):null}).focusout(function(){$(this).val()==""?$(this).val("Untitled graph").css({"color":"#999"}):null});var flags=[false,false,false];$("#form > button").click(function(){switch($(this).html()){case"add":if($("#form > input:eq(1)").val()!=""&&$("#form > input:eq(1)").val()!="Node"){if(!addNode($("#form > input:eq(1)").val()))$.notifyBar({html:"Node already exists, it wasn't added",cls:"error"});$("#form > input:eq(1)").val("").focus()}break;case"weighted matrix":if(g.nodes.length>0){var r='<h2>Weighted Matrix</h2><table><tr><th> </th>';var b=g.getMatrix("weighted");for(var i=0;i<g.nodes.length;i++)r+='<th>'+g.nodes[i]+'</th>';r+='</tr>';for(var i=0;i<g.nodes.length;i++){r+='<tr><td class="table_first">'+g.nodes[i]+'</td>'for(var j=0;j<g.nodes.length;j++){r+='<td>';if(typeof b[i][j]!="boolean")r+='<span style="color:red">'+b[i][j].toString()+'</span>';else if(b[i][j]==true)r+='1';else r+='0';r+='</td>'}r+='</tr>'}r+='</table><p>Weights shown in <span style="color:red">red</span><br/>Unweighted edge displays as 1<br/>Non existent edge displays as 0</p>';$("#matrix-overlay").html(r);$("#matrix-overlay-div").fadeIn()}else $.notifyBar({html:"The graph is empty<br/>Try adding some nodes first",cls:"error"});break;case"unweighted matrix":if(g.nodes.length>0){var r='<h2>Unweighted Matrix</h2><table><tr><th> </th>';var b=g.getMatrix("weighted");for(var i=0;i<g.nodes.length;i++)r+='<th>'+g.nodes[i]+'</th>';r+='</tr>';for(var i=0;i<g.nodes.length;i++){r+='<tr><td class="table_first">'+g.nodes[i]+'</td>'for(var j=0;j<g.nodes.length;j++){r+='<td>';if(b[i][j])r+='<span style="color:red">1</span>';else r+='0';r+='</td>'}r+='</tr>'}r+='</table>';$("#matrix-overlay").html(r);$("#matrix-overlay-div").fadeIn()}else $.notifyBar({html:"The graph is empty<br/>Try adding some nodes first",cls:"error"});break;case"reset app":if(g.nodes.length>0)jConfirm("All unsaved changes will be lost.<br/>Really reset?","About to reset your graph",function(r){if(r){$("#canvas").fadeOut().delay(300).fadeIn();window.setTimeout(function(){$("#canvas").html(description)},300);g=new DirectedGraph()}});else $.notifyBar({html:"There's nothing to reset"});break;case"redraw":if(g.nodes.length>0)plot();else $.notifyBar({html:"There's nothing to draw or redraw<br/>Try adding some nodes first"});break;case"new":if(g.nodes.length>0){jConfirm("Any unsaved changes will be lost<br/>Do you want to continue?","Create new graph",function(r){if(r){g=new DirectedGraph();$("#canvas").empty();$("#form > input:eq(0)").val("Untitled graph").css({"color":"#999"})}})}break;case"save":if(g.nodes.length>0){var c=$("#form > input:eq(0)").val();if(c!=""&&c!="Untitled graph"){if(!getCookie(c)){g.setName(c);graphs.push(c);setCookie("graphsCookie",JSON.stringify(graphs),3650);setCookie(c,JSON.stringify(g),3650);$("#form > select").empty().html('<option style="color:ccc">load a graph</option>');for(var i=0;i<graphs.length;i++)$("#form > select").append('<option>'+graphs[i]+'</option>');$.notifyBar({html:c+" was saved successfully",cls:"success"})}else jConfirm("Another graph exists with that name in this computer.<br/>Do you want to replace it with this one?","Replace graph",function(r){if(r){setCookie(c,JSON.stringify(g),3650);$("#form > select").empty().html('<option style="color:ccc">load a graph</option>');for(var i=0;i<graphs.length;i++)$("#form > select").append('<option>'+graphs[i]+'</option>');$.notifyBar({html:c+" was saved successfully",cls:"success"})}})}else $.notifyBar({html:"The graph must be named first",cls:"error"})}else $.notifyBar({html:"The graph is empty<br/>Try adding some nodes first",cls:"error"});break;case"delete this graph":if(graphs.length>0){if(graphs.filter(function(a){return(a==g.name)}).length>0){jConfirm("Are you sure you want to delete this graph?<br/>There's no going back","Confirm deletion",function(r){if(r){var a=new Array();graphs.forEach(function(x){if(x!=g.name)a.push(x)});graphs=a;setCookie("graphsCookie",JSON.stringify(graphs),3650);deleteCookie(g.name);$("#form > select").empty().html('<option style="color:ccc">load a graph</option>');for(var i=0;i<graphs.length;i++)$("#form > select").append('<option>'+graphs[i]+'</option>');$.notifyBar({html:g.name+" was deleted successfully",cls:"success"});g=new DirectedGraph();$("#canvas").empty()}})}else $.notifyBar({html:"There's nothing to delete<br/>Try saving the graph"})}else $.notifyBar({html:"There's nothing to delete<br/>Try saving a graph first"});break;case"delete all graphs":if(graphs.length>0)jConfirm("Do you REALLY want to delete all graphs stored on this computer?<br/>There's no turn back","Confirm complete deletion",function(r){if(r){deleteAllCookies();graphs=new Array();$("#form > select").html('<option>load a graph</option>');$("#canvas").fadeOut().delay(300).fadeIn();window.setTimeout(function(){$("#canvas").html(description)},300);g=new DirectedGraph();$.notifyBar({html:"All graphs were deleted successfully.",cls:"success"})}});else $.notifyBar({html:"There's nothing to delete<br/>Try saving a graph first"});break;case"load":var d=function(){if($("#form > select > option").size()>1)for(var i=1;i<$("#form  > select > option").size();i++)if($("#form > select > option:eq("+i+")").attr("selected"))return $("#form > select > option:eq("+i+")").html();return false}if(d()){if(g.nodes.length>0)jConfirm("Any unsaved changes will be lost<br/>Do you want to continue?","Confirm graph load",function(r){if(r)g=new DirectedGraph({raw:JSON.parse(getCookie(d()))});$("#canvas").fadeOut().delay(300).fadeIn();window.setTimeout(function(){plot()},300)})else{g=new DirectedGraph({raw:JSON.parse(getCookie(d()))});$("#canvas").fadeOut().delay(300).fadeIn();window.setTimeout(function(){plot()},300)}}else $.notifyBar({html:"Nothing to load<br/>Select a graph from the drop-down menu first"})break}});$("#matrix-overlay-close").bind("click",function(){$("#matrix-overlay-div").fadeOut()});$("#form > input:eq(1)").keyup(function(e){if(e.which==13)if($("#form > input:eq(1)").val()!=""&&$("#form > input:eq(1)").val()!="Node"){if(!addNode($("#form > input:eq(1)").val()))$.notifyBar({html:"Node already exists. It wasn't added.",cls:"error"});$(this).val("").focus()}});var plot=function(){$("#canvas").empty();var a=new Graph();a.addNodesFromArray(g.nodes);var b=new Array();for(var i=0;i<g.edges.length;i++)for(var j=0;j<g.edges[i].targets.length;j++)if(typeof g.edges[i].targets[j]=="object")b.push([g.edges[i].node,g.edges[i].targets[j][0],{directed:true,label:g.edges[i].targets[j][1]}])else b.push([g.edges[i].node,g.edges[i].targets[j],{directed:true}]);a.addEdgesFromArray(b);var c=new Graph.Layout.Spring(a);c.layout();var d=new Graph.Renderer.Raphael("canvas",a,window.innerWidth-100,window.innerHeight-130);d.draw();bindEllipses()};var bindEllipses=function(){$("#canvas > svg > ellipse").bind("click",function(){if(edgeFlag.fromMenu){edgeFlag.to=$(this).attr("id");jPrompt("Enter weight<br/>Leave blank for unweighted edge","","Weight",function(r){if(r!="Your message here"){if(parseFloat(r))r=parseFloat(r);addEdge(edgeFlag.from,edgeFlag.to,r)}else addEdge(edgeFlag.from,edgeFlag.to);edgeFlag.from=null;edgeFlag.to=null;edgeFlag.fromMenu=null;$("#canvas > svg > ellipse").css({"cursor":"move"})})}});$("#canvas > svg > ellipse").bind("dblclick",function(){edgeFlag.from=$(this).attr("id");edgeFlag.fromMenu=true;$.notifyBar({html:"now click on target node"});$("#canvas > svg > ellipse").css({"cursor":"pointer"})});$('#canvas > svg > ellipse').bind('contextmenu',function(){b($(this).attr("id"),parseInt($(this).attr("cx")),parseInt($(this).attr("cy")));return false});var b=function(a,x,y){$(".vmenu > div:eq(0) > span").html(a);$(".vmenu").css({"top":(y+30)+"px","left":(x+70)+"px"}).fadeIn(200)};$("body").bind("click",function(){$(".vmenu").fadeOut(200)});$("#createEdge").bind("click",function(){edgeFlag.from=$(".vmenu > div:eq(0) > span").html();edgeFlag.fromMenu=true;$.notifyBar({html:"now click on target node"});$("#canvas > svg > ellipse").css({"cursor":"pointer"});$(".vmenu").fadeOut(50)})};var addNode=function(a){if(g.addNode(a)){plot();return true}else return false};var removeNode=function(a){g.removeNode(a);plot()};var addEdge=function(a,b,c){if(g.addEdge(a,b,c))plot()};var onResize=function(){$("#canvas").css({height:(window.innerHeight-$("#form").height()-45)+"px",width:(window.innerWidth-38)+"px"});if(g.nodes.length>0)plot()};var timer;$(window).resize(function(){timer&&clearTimeout(timer);timer=setTimeout(onResize,100)});var speak=function(a){if(a!=""&&a!="Node"){if(!addNode(a))$.notifyBar({html:"Node already exists, it wasn't added",cls:"error"});$("#form > input:eq(1)").val("").focus()}};var secret=function(a){$("#secret-text").append('"'+a+'" ')};$("#secret-close").bind("click",function(){$("#secret-text").empty();$("#secret").fadeOut(100)});var secretFlag=[false,false,false]$(document).keydown(function(e){switch(e.which){case 17:secretFlag[0]=true;break;case 16:secretFlag[1]=true;break;case 83:secretFlag[2]=true;break}if(secretFlag[0]&&secretFlag[1]&&secretFlag[2])$("#secret").fadeIn(2000)}).keyup(function(e){switch(e.which){case 17:secretFlag[0]=false;break;case 16:secretFlag[1]=false;break;case 83:secretFlag[2]=false;break}});$(document).ready(function(){if(getCookie("graphsCookie")){graphs=JSON.parse(getCookie("graphsCookie"))}for(var i=0;i<graphs.length;i++)$("#form > select").append('<option>'+graphs[i]+'</option>')});